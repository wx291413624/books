<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.books.dao.BooksMapper">
    <resultMap id="BaseResultMap" type="com.example.books.model.Books">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="IBSN" property="ibsn" jdbcType="VARCHAR"/>
        <result column="book_name" property="bookName" jdbcType="VARCHAR"/>
        <result column="writer_id" property="writerId" jdbcType="INTEGER"/>
        <result column="press" property="press" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, IBSN, book_name, writer_id, press, price, content, category_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from books
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from books
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.books.model.Books">
    insert into books (id, IBSN, book_name, 
      writer_id, press, price, 
      content, category_id)
    values (#{id,jdbcType=INTEGER}, #{ibsn,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{writerId,jdbcType=INTEGER}, #{press,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{content,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.example.books.model.Books">
        insert into books
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ibsn != null">
                IBSN,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="writerId != null">
                writer_id,
            </if>
            <if test="press != null">
                press,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ibsn != null">
                #{ibsn,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="writerId != null">
                #{writerId,jdbcType=INTEGER},
            </if>
            <if test="press != null">
                #{press,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.books.model.Books">
        update books
        <set>
            <if test="ibsn != null">
                IBSN = #{ibsn,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="writerId != null">
                writer_id = #{writerId,jdbcType=INTEGER},
            </if>
            <if test="press != null">
                press = #{press,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.books.model.Books">
    update books
    set IBSN = #{ibsn,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      writer_id = #{writerId,jdbcType=INTEGER},
      press = #{press,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      content = #{content,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from books
    </select>
</mapper>